{"version":3,"sources":["App.js","index.js"],"names":["App","state","timerOn","timerStart","timerTime","startTimer","setState","Date","timer","setInterval","stopTimer","clearInterval","waitTimer","resetTimer","a","this","seconds","Math","floor","slice","minutes","hours","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"mLA4DeA,E,4MAzDbC,MAAQ,CACNC,SAAS,EACTC,WAAY,EACZC,UAAW,G,EAGbC,WAAa,WACX,EAAKC,SAAS,CACZJ,SAAS,EACTC,WAAY,IAAII,KAAS,EAAKN,MAAMG,YAEtC,EAAKI,MAAQC,aAAY,WACvB,EAAKH,SAAS,CACZF,UAAW,IAAIG,KAAS,EAAKN,MAAME,eAEpC,M,EAGLO,UAAY,WACV,EAAKJ,SAAS,CAAEJ,SAAS,EAAOC,WAAY,EAAGC,UAAW,IAC1DO,cAAc,EAAKH,Q,EAGrBI,UAAY,WACV,EAAKN,SAAS,CAAEJ,SAAS,IACzBS,cAAc,EAAKH,Q,EAGrBK,W,sBAAa,sBAAAC,EAAA,sEACL,EAAKR,SAAS,CAClBJ,SAAS,EACTC,WAAY,EACZC,UAAW,IAJF,cAMXO,cAAc,EAAKH,OANR,SAOL,EAAKH,aAPA,2C,uDAUH,IACAD,EAAcW,KAAKd,MAAnBG,UACJY,GAAW,IAAOC,KAAKC,MAAMd,EAAY,KAAQ,IAAKe,OAAO,GAC7DC,GAAW,IAAOH,KAAKC,MAAMd,EAAY,KAAS,IAAKe,OAAO,GAC9DE,GAAS,IAAMJ,KAAKC,MAAMd,EAAY,OAAUe,OAAO,GAC3D,OACE,6BACE,6BACGE,EADH,MACaD,EADb,MACyBJ,GAEzB,4BAAQM,QAASP,KAAKV,YAAtB,SACA,4BAAQiB,QAASP,KAAKL,WAAtB,QACA,4BAAQY,QAASP,KAAKH,WAAtB,QACA,4BAAQU,QAASP,KAAKF,YAAtB,c,GApDUU,aCElBC,IAASC,OAAO,kBAAC,EAAD,MAAWC,SAASC,eAAe,U","file":"static/js/main.f6839d43.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass App extends Component {\n  state = {\n    timerOn: false,\n    timerStart: 0,\n    timerTime: 0,\n  };\n\n  startTimer = () => {\n    this.setState({\n      timerOn: true,\n      timerStart: new Date() - this.state.timerTime,\n    });\n    this.timer = setInterval(() => {\n      this.setState({\n        timerTime: new Date() - this.state.timerStart,\n      });\n    }, 1000);\n  };\n\n  stopTimer = () => {\n    this.setState({ timerOn: false, timerStart: 0, timerTime: 0 });\n    clearInterval(this.timer);\n  };\n\n  waitTimer = () => {\n    this.setState({ timerOn: false });\n    clearInterval(this.timer);\n  };\n\n  resetTimer = async () => {\n    await this.setState({\n      timerOn: true,\n      timerStart: 0,\n      timerTime: 0,\n    });\n    clearInterval(this.timer);\n    await this.startTimer();\n  };\n\n  render() {\n    const { timerTime } = this.state;\n    let seconds = ('0' + (Math.floor(timerTime / 1000) % 60)).slice(-2);\n    let minutes = ('0' + (Math.floor(timerTime / 60000) % 60)).slice(-2);\n    let hours = ('0' + Math.floor(timerTime / 3600000)).slice(-2);\n    return (\n      <div>\n        <div>\n          {hours} : {minutes} : {seconds}\n        </div>\n        <button onClick={this.startTimer}>Start</button>\n        <button onClick={this.stopTimer}>Stop</button>\n        <button onClick={this.waitTimer}>Wait</button>\n        <button onClick={this.resetTimer}>Reset</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport Timer from './App';\r\n\r\nReactDOM.render(<Timer />, document.getElementById('root'));\r\n"],"sourceRoot":""}